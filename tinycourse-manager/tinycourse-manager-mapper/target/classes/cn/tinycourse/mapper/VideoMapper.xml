<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.tinycourse.mapper.VideoMapper" >
  <resultMap id="BaseResultMap" type="cn.tinycourse.pojo.Video" >
    <id column="vid_id" property="vidId" jdbcType="INTEGER" />
    <result column="cour_id" property="courId" jdbcType="INTEGER" />
    <result column="vid_name" property="vidName" jdbcType="VARCHAR" />
    <result column="vid_path" property="vidPath" jdbcType="VARCHAR" />
    <result column="vid_date" property="vidDate" jdbcType="DATE" />
    <result column="vid_order" property="vidOrder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    vid_id, cour_id, vid_name, vid_path, vid_date, vid_order
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.tinycourse.pojo.VideoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from video
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from video
    where vid_id = #{vidId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video
    where vid_id = #{vidId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.tinycourse.pojo.VideoExample" >
    delete from video
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.tinycourse.pojo.Video" >
    insert into video (vid_id, cour_id, vid_name, 
      vid_path, vid_date, vid_order
      )
    values (#{vidId,jdbcType=INTEGER}, #{courId,jdbcType=INTEGER}, #{vidName,jdbcType=VARCHAR}, 
      #{vidPath,jdbcType=VARCHAR}, #{vidDate,jdbcType=DATE}, #{vidOrder,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.tinycourse.pojo.Video" >
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vidId != null" >
        vid_id,
      </if>
      <if test="courId != null" >
        cour_id,
      </if>
      <if test="vidName != null" >
        vid_name,
      </if>
      <if test="vidPath != null" >
        vid_path,
      </if>
      <if test="vidDate != null" >
        vid_date,
      </if>
      <if test="vidOrder != null" >
        vid_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vidId != null" >
        #{vidId,jdbcType=INTEGER},
      </if>
      <if test="courId != null" >
        #{courId,jdbcType=INTEGER},
      </if>
      <if test="vidName != null" >
        #{vidName,jdbcType=VARCHAR},
      </if>
      <if test="vidPath != null" >
        #{vidPath,jdbcType=VARCHAR},
      </if>
      <if test="vidDate != null" >
        #{vidDate,jdbcType=DATE},
      </if>
      <if test="vidOrder != null" >
        #{vidOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.tinycourse.pojo.VideoExample" resultType="java.lang.Integer" >
    select count(*) from video
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update video
    <set >
      <if test="record.vidId != null" >
        vid_id = #{record.vidId,jdbcType=INTEGER},
      </if>
      <if test="record.courId != null" >
        cour_id = #{record.courId,jdbcType=INTEGER},
      </if>
      <if test="record.vidName != null" >
        vid_name = #{record.vidName,jdbcType=VARCHAR},
      </if>
      <if test="record.vidPath != null" >
        vid_path = #{record.vidPath,jdbcType=VARCHAR},
      </if>
      <if test="record.vidDate != null" >
        vid_date = #{record.vidDate,jdbcType=DATE},
      </if>
      <if test="record.vidOrder != null" >
        vid_order = #{record.vidOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update video
    set vid_id = #{record.vidId,jdbcType=INTEGER},
      cour_id = #{record.courId,jdbcType=INTEGER},
      vid_name = #{record.vidName,jdbcType=VARCHAR},
      vid_path = #{record.vidPath,jdbcType=VARCHAR},
      vid_date = #{record.vidDate,jdbcType=DATE},
      vid_order = #{record.vidOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tinycourse.pojo.Video" >
    update video
    <set >
      <if test="courId != null" >
        cour_id = #{courId,jdbcType=INTEGER},
      </if>
      <if test="vidName != null" >
        vid_name = #{vidName,jdbcType=VARCHAR},
      </if>
      <if test="vidPath != null" >
        vid_path = #{vidPath,jdbcType=VARCHAR},
      </if>
      <if test="vidDate != null" >
        vid_date = #{vidDate,jdbcType=DATE},
      </if>
      <if test="vidOrder != null" >
        vid_order = #{vidOrder,jdbcType=INTEGER},
      </if>
    </set>
    where vid_id = #{vidId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tinycourse.pojo.Video" >
    update video
    set cour_id = #{courId,jdbcType=INTEGER},
      vid_name = #{vidName,jdbcType=VARCHAR},
      vid_path = #{vidPath,jdbcType=VARCHAR},
      vid_date = #{vidDate,jdbcType=DATE},
      vid_order = #{vidOrder,jdbcType=INTEGER}
    where vid_id = #{vidId,jdbcType=INTEGER}
  </update>
</mapper>